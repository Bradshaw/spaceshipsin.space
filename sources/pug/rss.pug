-
    var lastUpdated = articles.filter(article => article.status === "published").reduce(
            (prev, current) => {
                if (!prev.hasOwnProperty("updated")) return {updated: new Date(null)};
                if (!current.hasOwnProperty("updated")) return prev;
                return prev.updated > current.updated ? prev : current;
            }
    ).updated;
doctype xml
rss(version="2.0" xmlns:atom="http://www.w3.org/2005/Atom")
    channel
        atom:link(href=siteUrl+'/'+feed.target rel="self" type="application/rss+xml")
        title #{name}
        link #{siteUrl}/posts
        description #{description}
        lastBuildDate #{(new Date(lastUpdated)).toUTCString()}
        image
            url #{siteUrl}/favicon.png
            title #{name}
            link #{siteUrl}/posts
            description #{description}
        if language
            language #{language}
        if categories
            each tag in categories
                category #{tag}
        if rights
            copyright #{rights}
        docs https://www.rssboard.org/rss-specification
        each article in articles
            item
                title #{article.title}
                guid #{siteUrl}/#{article.url}
                pubDate #{(new Date(article.created)).toUTCString()}
                source(url=siteUrl+'/'+feed.target) #{description}
                link #{siteUrl}#{article.url}
                description #{article.preview}
                if article.author && article.author.email && article.author.name
                    author #{article.author.email} (#{article.author.name})
                else if author.email && author.email && author.name
                    author #{author.email} (#{author.name})
                if article.tags
                    each tag in article.tags
                        category #{tag}